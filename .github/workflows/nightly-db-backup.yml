name: Nightly DB Backup

on:
  schedule:
    - cron: "0 3 * * *"   # 03:00 UTC
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Prepare folder
        run: mkdir -p backups

      - name: Dump database (force IPv4 + SSL if needed)
        env:
          DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        shell: bash
        run: |
          set -euo pipefail

          CLEAN="$(printf '%s' "$DB_URL" | tr -d '[:space:]')"

          # força IPv4
          HOST="$(printf '%s' "$CLEAN" | sed -E 's#^postgres(ql)?://([^@]+@)?([^:/?]+).*#\3#')"
          IPV4="$(getent ahostsv4 "$HOST" | awk 'NR==1{print $1}')"
          if [ -n "$IPV4" ]; then
            export PGHOSTADDR="$IPV4"
            echo "Resolved $HOST -> $IPV4"
          else
            echo "WARNING: could not resolve IPv4 for $HOST (will try default)"
          fi

          # garante SSL se a URI não trouxer
          case "$CLEAN" in *sslmode=*) : ;; *) export PGSSLMODE=require ;; esac
          echo "PGSSLMODE=${PGSSLMODE:-'(unset)'}"

          TS="$(date -u +'%Y-%m-%dT%H-%M-%SZ')"
          F="db_${TS}.dump.gz"

          # usa a própria URI como --dbname (sem parse)
          pg_dump --dbname="$CLEAN" --format=custom --no-owner --no-acl \
            | gzip -c > "backups/$F"

          echo "FILENAME=$F" >> "$GITHUB_ENV"
          echo "Dump created: backups/$F"

      - name: Push to backup repo
        env:
          GH_TOKEN: ${{ secrets.BACKUP_PAT }}
          REPO:     ${{ secrets.BACKUP_REPO }}   # ex.: rdsilvalopes/bidly-backups
        shell: bash
        run: |
          set -euo pipefail

          git config --global user.email "backup-bot@local"
          git config --global user.name  "Backup Bot"

          rm -rf out
          git clone --depth 1 "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" out

          cp "backups/$FILENAME" out/
          cd out
          git add "$FILENAME"
          git commit -m "db: ${FILENAME}" || echo "Nothing to commit"
          git push
