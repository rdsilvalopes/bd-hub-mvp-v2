name: Nightly DB Backup

on:
  schedule:
    - cron: "0 3 * * *"   # 03:00 UTC diário
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Instalar cliente PostgreSQL
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Preparar pasta
        run: mkdir -p backups

      - name: Dump (pg_dump custom + gzip)
        env:
          DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -euo pipefail
          CLEAN="$(printf '%s' "$DB_URL" | tr -d '[:space:]')"
          HOST="$(printf '%s' "$CLEAN" | sed -E 's#^postgres(ql)?://[^@]+@([^:/?]+).*#\2#')"
          IPV4="$(getent ahostsv4 "$HOST" | awk 'NR==1{print $1}')"
          if [ -z "$IPV4" ]; then
            echo "Não foi possível resolver IPv4 para $HOST" >&2
            exit 1
          fi
          export PGHOSTADDR="$IPV4"
          TS="$(date -u +"%Y-%m-%dT%H-%M-%SZ")"
          F="db_${TS}.dump.gz"
          pg_dump --dbname="$CLEAN" --format=custom | gzip -c > "backups/$F"
          echo "FILENAME=$F" >> "$GITHUB_ENV"

      - name: Enviar para repositório de backups
        env:
          GH_PAT: ${{ secrets.BACKUP_PAT }}
          BACKUP_REPO: ${{ secrets.BACKUP_REPO }}   # ex.: rdsilvalopes/bidly-backups
        run: |
          set -euo pipefail
          git config --global user.email "bot@github-actions"
          git config --global user.name  "backup-bot"

          TMP="$(mktemp -d)"
          cd "$TMP"
          git clone --depth=1 "https://${GH_PAT}@github.com/${BACKUP_REPO}.git" repo
          cd repo

          mkdir -p postgres
          cp "${GITHUB_WORKSPACE}/backups/${FILENAME}" "postgres/${FILENAME}"

          git add -A
          git commit -m "db: nightly backup ${FILENAME}" || echo "Nada para commitar"
          git push
